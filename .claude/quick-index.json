{
  "version": "1.0",
  "lastUpdated": "2025-11-01",
  "fastLookup": {
    "critical_rules": [
      "Todo lists for 2+ step tasks (use TodoWrite)",
      "Complete implementations (no TODOs in code, BUT templates OK if obvious)",
      "Zero tolerance for test failures",
      "Work autonomously",
      "Use structured logger (not console.log)",
      "Prioritize quick wins when smart (don't over-engineer)",
      "Real-time visibility - report blockers/wins immediately"
    ],
    "key_principles": [
      "Context is everything",
      "Complete > Partial",
      "Tests first",
      "Automate thinking with todos",
      "Be direct about problems",
      "Document decisions (why, not what)",
      "Quick wins when smart",
      "Real-time visibility"
    ],
    "documentation_requirements": [
      "AGENTS.md in every project (AI guidance, entry points, patterns)",
      "Architecture diagrams (Mermaid)",
      "Last updated timestamps",
      "Clear examples and patterns",
      "Common pitfalls sections"
    ],
    "template_pattern": [
      "Templates OK for quick starts if TODOs are obvious",
      "Mark with: // TODO: [feature-name] - [what's missing]",
      "List TODOs in commit message",
      "Each piece must be finished (not partial implementations)",
      "Don't hide pending work - be transparent",
      "Finish feature OR mark entire feature WIP"
    ],
    "when_to_ask": [
      "Destructive operations",
      "Breaking changes",
      "Ambiguous requirements",
      "High-stakes decisions"
    ],
    "never_ask_about": [
      "Standard operations",
      "Documented patterns",
      "Running tests",
      "Starting tasks"
    ]
  },
  "files": {
    "quickstart": {
      "path": "AI_QUICKSTART.md",
      "lines": 605,
      "purpose": "Essential rules and workflow"
    },
    "reference": {
      "path": "MASTER_LEARNINGS.md",
      "lines": 1234,
      "purpose": "Complete learning reference"
    },
    "dictionary": {
      "path": "TERM_DICTIONARY.md",
      "lines": 541,
      "purpose": "Key terminology"
    },
    "tokens": {
      "path": "docs/cost-optimization/TOKEN_EFFICIENCY.md",
      "lines": 1190,
      "purpose": "AI token usage reduction"
    },
    "improvements": {
      "path": "AI_AGENT_IMPROVEMENTS.md",
      "purpose": "Roadmap for AI agent feature enhancements"
    },
    "optimization_summary": {
      "path": "OPTIMIZATION_SUMMARY.md",
      "purpose": "Complete summary of all 20+ optimization tools built (status, impact, usage)"
    },
    "token_baselines": {
      "path": "docs/TOKEN_BASELINES.md",
      "purpose": "Real token costs per task type for budgeting and planning"
    },
    "prompts": {
      "path": "docs/AI_PROMPT_LIBRARY.md",
      "purpose": "13 pre-built prompts for common tasks (200-500t savings each)"
    }
  },
  "projects": {
    "calm-couples": {
      "path": "projects/calm-couples.md",
      "stack": "React 19 + TypeScript + Supabase + Tailwind",
      "type": "SaaS"
    },
    "ios-automation": {
      "path": "projects/ios-automation.md",
      "stack": "IDB + Appium + Tesseract OCR",
      "type": "E2E Testing"
    },
    "calm-ai-project-manager": {
      "path": "projects/calm-ai-project-manager.md",
      "stack": "Node.js + Express + Prisma + Claude 3.5",
      "type": "Internal Tool"
    }
  },
  "guides": {
    "agent_optimization": ".claude/AGENT_OPTIMIZATION.md",
    "efficient_search": ".claude/EFFICIENT_SEARCH.md",
    "setup": "docs/guides/SETUP_GUIDE.md",
    "learning_path": "docs/guides/LEARNING_PATH.md",
    "architecture": "docs/guides/ARCHITECTURE.md",
    "examples": "docs/guides/EXAMPLES.md",
    "quick_reference": "docs/guides/QUICK_REFERENCE.md"
  },
  "scripts": {
    "search": "./scripts/search-learnings.sh",
    "tests": "./tests/run-all-tests.sh",
    "compliance": "./tests/ai-agent-compliance.test.sh"
  },
  "qualityBars": {
    "testCoverage": "98%",
    "failingTests": "0",
    "typeScript": "Strict mode, zero any",
    "codeTodos": "0"
  }
}
